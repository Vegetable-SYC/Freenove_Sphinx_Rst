##############################################################################
1. 简介
##############################################################################

:ref:`freenove_sphinx_rst/codes/tutorial/tools:table formatter`

:doc:`Deployment</Freenove_Sphinx_Rst/codes/tutorial/deployment>`

1.1 reStructuredText
****************************************************

reStructuredText(reST) 是一种 **轻量级** 标记语言, 专为技术文档设计。它以纯文本为基础, 可通过简单语法生成结构化内容(如网页、PDF等), 是Python生态中文档工具链(如Sphinx)的核心格式, **适合编写技术手册、API文档和开源项目说明**。

1.1.1 核心特点
====================================

**可读性强 语法简洁直观**, 纯文本格式在未渲染时仍易读。

扩展灵活 支持自定义指令、表格、代码块、交叉引用等复杂功能。

标准化工具链 与 Sphinx、Docutils 等工具深度集成, 支持自动化构建多格式文档。

1.1.2 与MarkDomn对比
====================================

- 更强大的结构化能力：适合书籍、论文等长文档。

- 精准内容控制：支持角色指令、注释隐藏等高级特性。

1.1.3 适用场景
====================================

- 项目文档(如官方教程)

- 需要自动化生成多版本/多格式的文档

- 技术书籍、学术论文等复杂内容
  
1.2 Sphinx
******************************

Sphinx 是一款基于 Python 的智能文档生成工具, 专为高效创建清晰、结构化的技术文档设计, 适合开发者、技术写作者快速构建专业且可维护的文档体系。

1.2.1 核心特点
==================================

- **默认使用 reStructuredText** (reST)编写内容, 同时可通过扩展支持 Markdown。

- 自动提取代码注释生成 API 文档, 支持 Python、C++ 等多种语言。

- 可生成 HTML、PDF、EPUB 等格式, 适配网页、电子书及印刷需求。

1.2.2 典型应用
===================================

Python 官方文档、书籍及开源项目(如 NumPy)均采用 Sphinx。其插件生态(如 autodoc、napoleon)和版本控制集成, 使其成为管理复杂文档的首选工具。

1.3 Read the Docs
*******************************

Read the Docs 是一个 **开源的在线文档托管平台** , 专为开发者设计。它支持自动化构建、版本控制及托管技术文档, 可与 GitHub/GitLab 等工具无缝集成。通过 Markdown 或 reStructuredText 编写内容, 即可自动生成网页版文档, 并提供多版本管理、全文搜索、多语言支持等功能, 帮助开发者高效维护清晰、易访问的项目文档, 尤其适合开源项目与技术协作场景。